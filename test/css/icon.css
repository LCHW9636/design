@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');
.wrapper {
    width: 1280px; 
    margin: 0 auto; 
}
#wrap { /* id="wrap"에 적용되는 스타일*/
    min-width: 1280px;    
}
* { 
    padding: 0; /* 모든 태그의 여백 삭제 */
    margin: 0;
    box-sizing: border-box;
    /* padding 하고 border 넓이를 늘리는 요소인데 넓이를 늘리지 않도록 하는 속성 */
}
a { /* a태그는 파란색에 underline이 기본적으로 생성됨*/
    text-decoration: none; /*underline 제거*/
    color: inherit;
    /* 색상은 상속받아 - 파란색 말고 누군가가 상속해준 스타일을 적용*/
}
ul, ol, li {
    list-style: none; /*ul li앞에 동그라미 삭제*/
}
address, em {
    /* em태그와 address태그는 기본적으로 이텔릭체임 
       디자인상 이텔릭을 사용하기 위해서 쓰지 않음 - 최근 이텔릭체를 디자인 하지 않음
       그래서 태그에 있는 기본 이텔릭을 초기화함*/
    font-style: normal;
}
/* 글자를 두껍게하고 글자 크기를 조정하는 태그 -
    body 태그가 선언한 속성대로 적용될 수 있게 초기화
    브라우저가 기본적으로 적용한 스타일이 적용되지 않도록 막음 */
h1, h2, h3, h4, h5, h6, strong {
    font-size: inherit;
    font-weight: inherit;
}
/* button태그는 기본 스타일이 많음*/
button {
    background-color: transparent; /*배경투명*/
    border: 0; /* 테두리 삭제 */
    color: inherit; /* 브라우저가 주는 값 삭제 */
    font-family: inherit; /* button은 서체도 바뀜 - 상속 */
}
/* 640px 이하일때 스타일 - 640이하는 모바일, 초과는 탭 */
@media screen and (max-width:640px){
    html, body {
        font-size: 13px; 
    }
    .wrapper {
        width: auto; /* 넓이값 준 넓이값 해제(취소) - block 요소라면 넓이가 100%가 됨 */
        margin: 0 20px; /* 모바일에서는 좌우에 20px를 준다. */ 
    }
    #wrap { 
        min-width: 320px; /* 모바일 최소사이즈 */    
    }
}
body {
    font-family: 'Pretendard', sans-serif;
    font-size: 15px; 
    color: #3d3d3d;
    font-weight: 400;
    line-height: 1.4;
    word-break: keep-all;
}

h1 {
    font-size: 50px;
    font-weight: 700;
    margin: 20px;
    color: #1d1d1d;
}

.tnb {
    margin: 20px 0;
}
.tnb .inner {
    display: flex;
    align-items: center; /* 위아래 가운데 */
}
.tnb .login1,  .tnb .lang1 {
    /* 글자를 없애고 아이콘만 나오는 코딩 */
    width: 40px; /* 아이콘 사이즈 또는 a태그에 주고 싶은 크기*/
    height: 40px;
    display: inline-block;
    font-size: 0; /* 글자 숨기기 */
    line-height: 0;
}
.tnb .login1 {
    background: url(/test/images/login1.svg) no-repeat center center;
}
.tnb .lang1 {
    background: url(/test/images/lang1.svg) no-repeat center center;
}
@media screen and (max-width:640px){
    .tnb .login1,  .tnb .lang1 {
        /* 글자를 없애고 아이콘만 나오는 코딩 */
        width: 25px; /* 아이콘 사이즈*/
        height: 25px;
    }
    .tnb .login1 {
        background-size: 15px auto;
    }
    .tnb .lang1 {
        background-size: 20px auto;
    }
}

.tnb .login2, .tnb .lang2 {
    /* 아이콘이 왼쪽에 들어가고 오른쪽에 글자가 들어감
        그럼 아이콘이 들어갈 자리를 padding으로 줌
        -- 아이콘은 위치를 자유롭게 움직여야 해서
        before 가상 선택자에 position:absoluteㄹ로 줌*/
    padding-left: 25px;
    position: relative; /* before 선택자 정렬의 기준 */
    margin: 0 10px;
}
.tnb .login2::before,
.tnb .lang2::before {
    position: absolute; /* a를 기준으로 정렬*/
    left: 0;
    top: -2px;
    content: "";
    width: 20px; /* 아이콘 크기만하게 넓이랑 높이 줌 */
    height: 20px;
 }
 .tnb .login2::before {
    background: url(/test/images/login1.svg) no-repeat center center;
    background-size: 20px auto;
}
.tnb .lang2::before {
    background: url(/test/images/lang1.svg) no-repeat center center;
    background-size: 20px auto;
}

@media screen and (max-width:640px){
    .tnb .login2, .tnb .login2 {
        padding-left: 22px;
    }
    .tnb .login2::before,
     .tnb .lang2::before {
        top: -2px;
        width: 15px; /* 아이콘 크기만하게 넓이랑 높이 줌 */
        height: 15px;
        background-size: 15px auto;
     }
     .tnb .login2::before {
        background: url(/test/images/login1.svg) no-repeat center center;
        background-size: 15px auto;
    }
    .tnb .lang2::before {
        background: url(/test/images/lang1.svg) no-repeat center center;
        background-size: 15px auto;
    }
}

.tnb .login3,
.tnb .lang3 {
    padding-top: 33px;
    margin: 0 10px;
    position: relative;
}
.tnb .login3::before,
.tnb .lang3::before {
    position: absolute;
    /* before가 글자에 가운데 정렬 
    left: calc(50% - before width 의 넓이 반)*/
    left: calc(50% - 15px);
    top: 0;
    width: 30px; /* 아이콘 크기 */
    height: 30px;
    content: "";
}
.tnb .login3::before {
    background: url(/test/images/login1.svg) no-repeat center center;
}
.tnb .lang3::before {
    background: url(/test/images/lang1.svg) no-repeat center center;
}
@media screen and (max-width:640px){
        .tnb .login3,
    .tnb .lang3 {
        padding-top: 0px;
    }
    .tnb .login3::before,
    .tnb .lang3::before {
        display: none;
    }
}

.service ul {
    margin: 20px 0;
}
.service .st1 {
    display: flex;
}
.service .st1 li {
    width: 16.66%; /*100/6 = 16.66*/
    text-align: center;
}
.service .st1 li a {
    padding-top: 75px;
    display: block;
    position: relative; /* before 선택자 정렬의 중심 */
}
.service .st1 li a::before {
    position: absolute;
    /* before를 가운데 정렬 calc (50% - before width의 절반px) */
    left: calc(50% - 49px); 
    top: 0;
    content: "";
    width: 99px; /* 제일 큰 아이콘 사이즈 - 크기가 없으면 배경이 안보임*/
    height: 75px;
    background-position: center center;
    background-repeat: no-repeat;
    /*background라고 스타일을 주면
    repear,position, size, image 모든 스타일을 선언하는 것이다
    이때문에 css가 충돌되는 경우가 발생
    background를 각자 속성별로 선언하는게 충돌을 막을 수 있음*/
}
.service .st1 li.se1 a::before {
    background-image: url(../images/service01.svg);
}
.service .st1 li.se2 a::before {
    background-image: url(../images/service02.svg);
}
.service .st1 li.se3 a::before {
    background-image: url(../images/service03.svg);
}
.service .st1 li.se4 a::before {
    background-image: url(../images/service04.svg);
}
.service .st1 li.se5 a::before {
    background-image: url(../images/service05.svg);
}
.service .st1 li.se6 a::before {
    background-image: url(../images/service06.svg);
}
@media screen and (max-width:640px){
    .service ul {
        flex-wrap: wrap; /*flex는 무조건 한줄에 배치, 이 명령어는 두줄도 허용함*/
    }
    .service .st1 {
        display: flex;
    }
    .service .st1 li {
        width: 33.33%;
        margin-bottom: 10px;
    }
    .service .st1 li a {    
        padding-top: 48px;
    }
    .service .st1 li a::before {
        left: calc(50% - 25px); 
        top: 0;
        content: "";
        width: 50px; /* 제일 큰 아이콘 사이즈 - 크기가 없으면 배경이 안보임*/
        height: 43px;
        background-position: center center;
        background-repeat: no-repeat;
        background-size: auto 30px;
        /*background라고 스타일을 주면
        repear,position, size, image 모든 스타일을 선언하는 것이다
        이때문에 css가 충돌되는 경우가 발생
        background를 각자 속성별로 선언하는게 충돌을 막을 수 있음*/
    }
    .service .st1 li.se1 a::before {
        background-image: url(../images/service01.svg);
    }
    .service .st1 li.se2 a::before {
        background-image: url(../images/service02.svg);
    }
    .service .st1 li.se3 a::before {
        background-image: url(../images/service03.svg) ;
    }
    .service .st1 li.se4 a::before {
        background-image: url(../images/service04.svg);
    }
    .service .st1 li.se5 a::before {
        background-image: url(../images/service05.svg);
    }
    .service .st1 li.se6 a::before {
        background-image: url(../images/service06.svg);
    }
}

.service .st2 {
    display: flex;
    justify-content: space-between;

}
.service .st2 li a {
    width: 190px;
    height: 79px;
    border: 1px solid #ccc;
    display: flex;
    justify-content: center;
    padding-top: 20px; /* 위여백 */
}
.service .st2 li a em {
    padding-left: 89px; /* 아이콘이 들어갈 자리 */
    display: block;
    position: relative;
}
.service .st2 li a em::before {
    position: absolute;
    left: 0;
    top: 0;
    content: "";
    width: 83px;
    height: 49px;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: auto 49px;
}
.service .st2 li.se1 a em::before {
    background-image: url(../images/service01.svg);
}
.service .st2 li.se2 a em::before {
    background-image: url(../images/service02.svg);
}
.service .st2 li.se3 a em::before {
    background-image: url(../images/service03.svg);
}
.service .st2 li.se4 a em::before {
    background-image: url(../images/service04.svg);
}
.service .st2 li.se5 a em::before {
    background-image: url(../images/service05.svg);
}
.service .st2 li.se6 a em::before {
    background-image: url(../images/service06.svg);
}